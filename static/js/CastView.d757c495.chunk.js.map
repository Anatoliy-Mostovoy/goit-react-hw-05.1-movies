{"version":3,"sources":["View/CastView/CastView.js","View/CastView/CastView.module.css"],"names":["CastView","params","useParams","useState","casts","setCasts","loader","setLoader","useEffect","a","axios","get","filmId","response","data","cast","fetcher","className","s","CastContainer","CastList","map","CastItem","src","profile_path","alt","name","CastItemContent","CastItemContentTitle","character","CastItemText","id","module","exports"],"mappings":"wPAwDeA,UAlDE,WACf,IAAMC,EAASC,cAEf,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAeA,OAbAC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,6DACdF,GAAU,GADI,SAESG,IAAMC,IAAN,6CACiBV,EAAOW,OADxB,qEAFT,cAERC,EAFQ,OAKdR,EAASQ,EAASC,KAAKC,MACvBR,GAAU,GANI,kBAOPM,GAPO,2CAAH,qDASbG,KACC,CAACf,EAAOW,SAGT,sBAAKK,UAAWC,IAAEC,cAAlB,UACGb,GAAU,cAAC,IAAD,IACVF,GACC,oBAAIa,UAAWC,IAAEE,SAAjB,SACGhB,EAAMiB,KAAI,SAAAN,GACT,OACE,qBAAIE,UAAWC,IAAEI,SAAjB,UACE,qBACEC,IAAG,0CAAqCR,EAAKS,cAC7CC,IAAKV,EAAKW,OAEZ,sBAAKT,UAAWC,IAAES,gBAAlB,UACE,+BACE,sBAAMV,UAAWC,IAAEU,qBAAnB,yBACCb,EAAKc,UAAW,OAEnB,qBAAIZ,UAAWC,IAAEY,aAAjB,UACE,sBAAMb,UAAWC,IAAEU,qBAAnB,oBACCb,EAAKW,aAZoBX,EAAKgB,c,mBC/BnDC,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,SAAW,2BAA2B,SAAW,2BAA2B,aAAe,+BAA+B,gBAAkB,kCAAkC,qBAAuB","file":"static/js/CastView.d757c495.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport s from './CastView.module.css';\nimport axios from 'axios';\nimport { CustomLoader } from '../../helpers/customLoader/customLoader';\n\nconst CastView = () => {\n  const params = useParams();\n\n  const [casts, setCasts] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetcher = async () => {\n      setLoader(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${params.filmId}/credits?api_key=f4d5ed62044715aa9c5e4de0663d29b2&language=en-US`,\n      );\n      setCasts(response.data.cast);\n      setLoader(false);\n      return response;\n    };\n    fetcher();\n  }, [params.filmId]);\n\n  return (\n    <div className={s.CastContainer}>\n      {loader && <CustomLoader />}\n      {casts && (\n        <ul className={s.CastList}>\n          {casts.map(cast => {\n            return (\n              <li className={s.CastItem} key={cast.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n                  alt={cast.name}\n                />\n                <div className={s.CastItemContent}>\n                  <h3>\n                    <span className={s.CastItemContentTitle}>Character: </span>\n                    {cast.character}{' '}\n                  </h3>\n                  <h3 className={s.CastItemText}>\n                    <span className={s.CastItemContentTitle}>Name: </span>\n                    {cast.name}\n                  </h3>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CastView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastContainer\":\"CastView_CastContainer__Cxhmd\",\"CastList\":\"CastView_CastList__1GumX\",\"CastItem\":\"CastView_CastItem__1Q8tJ\",\"CastItemText\":\"CastView_CastItemText__9Y3pY\",\"CastItemContent\":\"CastView_CastItemContent__2rKwa\",\"CastItemContentTitle\":\"CastView_CastItemContentTitle__2VU4W\"};"],"sourceRoot":""}