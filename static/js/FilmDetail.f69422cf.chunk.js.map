{"version":3,"sources":["helpers/customLoader/customLoader.js","helpers/customLoader/customLoader.module.css","View/FilmDetail/FilmDetail.module.css","View/CastView/CastView.module.css","View/ReviewView/ReviewView.module.css","View/CastView/CastView.js","View/ReviewView/ReviewView.js","View/FilmDetail/FilmDetail.js"],"names":["CustomLoader","className","s","Loader","type","color","height","width","timeout","module","exports","CastView","params","useParams","useState","casts","setCasts","loader","setLoader","useEffect","a","axios","get","filmId","response","data","cast","fetcher","CastContainer","CastList","map","CastItem","src","profile_path","alt","name","CastItemContent","CastItemContentTitle","character","CastItemText","id","ReviewView","reviews","setReviews","results","review","ReviewTitle","ReviewTitleText","author","ReviewText","content","FilmDetail","onClick","match","useRouteMatch","film","setFilm","FilmDetailBtn","FilmCard","FilmCardImg","poster_path","FilmInfo","FilmInfoMark","title","release_date","popularity","toFixed","overview","genres","genre","FilmDetailNav","InformationCast","activeClassName","FilmDetailNavActive","to","url","InformationReview","path"],"mappings":"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","file":"static/js/FilmDetail.f69422cf.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\nimport s from './customLoader.module.css';\n\nexport const CustomLoader = () => {\n  return (\n    <div className={s.Loader}>\n      <Loader\n        type=\"Circles\"\n        color=\"tomato\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"customLoader_Loader__2S1tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmCard\":\"FilmDetail_FilmCard__3STPg\",\"FilmInfo\":\"FilmDetail_FilmInfo__1fny-\",\"InformationCast\":\"FilmDetail_InformationCast__LE4TY\",\"InformationReview\":\"FilmDetail_InformationReview__64v2L\",\"FilmDetailNav\":\"FilmDetail_FilmDetailNav__3eZU2\",\"FilmDetailNavActive\":\"FilmDetail_FilmDetailNavActive__kl1Zj\",\"FilmCardImg\":\"FilmDetail_FilmCardImg__8NBuY\",\"FilmInfoMark\":\"FilmDetail_FilmInfoMark__3fxz0\",\"FilmDetailBtn\":\"FilmDetail_FilmDetailBtn___mmJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastContainer\":\"CastView_CastContainer__Cxhmd\",\"CastList\":\"CastView_CastList__1GumX\",\"CastItem\":\"CastView_CastItem__1Q8tJ\",\"CastItemText\":\"CastView_CastItemText__9Y3pY\",\"CastItemContent\":\"CastView_CastItemContent__2rKwa\",\"CastItemContentTitle\":\"CastView_CastItemContentTitle__2VU4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReviewTitle\":\"ReviewView_ReviewTitle__2jNsM\",\"ReviewText\":\"ReviewView_ReviewText__3RlMX\",\"ReviewTitleText\":\"ReviewView_ReviewTitleText__2-Fi3\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport s from './CastView.module.css';\nimport axios from 'axios';\nimport { CustomLoader } from '../../helpers/customLoader/customLoader';\n\nexport const CastView = () => {\n  const params = useParams();\n\n  const [casts, setCasts] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetcher = async () => {\n      setLoader(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${params.filmId}/credits?api_key=f4d5ed62044715aa9c5e4de0663d29b2&language=en-US`,\n      );\n      setCasts(response.data.cast);\n      setLoader(false);\n      return response;\n    };\n    fetcher();\n  }, [params.filmId]);\n\n  return (\n    <div className={s.CastContainer}>\n      {loader && <CustomLoader />}\n      {casts && (\n        <ul className={s.CastList}>\n          {casts.map(cast => {\n            return (\n              <li className={s.CastItem} key={cast.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n                  alt={cast.name}\n                />\n                <div className={s.CastItemContent}>\n                  <h3>\n                    <span className={s.CastItemContentTitle}>Character: </span>\n                    {cast.character}{' '}\n                  </h3>\n                  <h3 className={s.CastItemText}>\n                    <span className={s.CastItemContentTitle}>Name: </span>\n                    {cast.name}\n                  </h3>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport s from './ReviewView.module.css';\nimport axios from 'axios';\nimport { CustomLoader } from '../../helpers/customLoader/customLoader';\n\nexport const ReviewView = () => {\n  const [reviews, setReviews] = useState(null);\n  const params = useParams();\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetcher = async () => {\n      setLoader(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${params.filmId}/reviews?api_key=f4d5ed62044715aa9c5e4de0663d29b2&language=en-US&page=1`,\n      );\n\n      setReviews(response.data.results);\n      setLoader(false);\n      return response;\n    };\n    fetcher();\n  }, [params.filmId]);\n\n  return (\n    <div>\n      <hr />\n      {loader && <CustomLoader />}\n      {reviews && (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3 className={s.ReviewTitle}>\n                  <span className={s.ReviewTitleText}>Author:</span>{' '}\n                  {review.author}\n                </h3>\n                <p className={s.ReviewText}>{review.content}</p>\n                <hr />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport { NavLink, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport s from './FilmDetail.module.css';\nimport { CastView } from '../CastView/CastView';\nimport { ReviewView } from '../ReviewView/ReviewView';\nimport { CustomLoader } from '../../helpers/customLoader/customLoader';\n\nconst FilmDetail = ({ onClick }) => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const [film, setFilm] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetcher = async () => {\n      setLoader(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${params.filmId}?api_key=f4d5ed62044715aa9c5e4de0663d29b2&language=en-US`,\n      );\n      setLoader(false);\n      setFilm(response.data);\n      return response;\n    };\n    fetcher();\n  }, [params.filmId]);\n\n  return (\n    <>\n      {loader && <CustomLoader />}\n      {film && (\n        <div>\n          <button className={s.FilmDetailBtn} type=\"button\" onClick={onClick}>\n            Back\n          </button>\n          <div className={s.FilmCard}>\n            <img\n              className={s.FilmCardImg}\n              src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n              alt=\"film\"\n            />\n            <div className={s.FilmInfo}>\n              <h1>\n                <span className={s.FilmInfoMark}>{film.title} </span>\n                <span>{film.release_date}</span>\n              </h1>\n              <hr />\n              <h2>\n                <span className={s.FilmInfoMark}>User score:</span>{' '}\n                {film.popularity.toFixed()}%\n              </h2>\n              <hr />\n              <h2 className={s.FilmInfoMark}>Overview</h2>\n              <p>{film.overview}</p>\n              <hr />\n              <h2 className={s.FilmInfoMark}>Genres:</h2>\n              <ul>\n                {film.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </ul>\n              <hr />\n            </div>\n          </div>\n          <hr />\n          <h3>Additional information</h3>\n          <div className={s.FilmDetailNav}>\n            <NavLink\n              className={s.InformationCast}\n              activeClassName={s.FilmDetailNavActive}\n              to={`${match.url}/cast`}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              className={s.InformationReview}\n              activeClassName={s.FilmDetailNavActive}\n              to={`${match.url}/review`}\n            >\n              Review\n            </NavLink>\n          </div>\n          <Switch>\n            <Route path={`${match.path}/cast`}>{film && <CastView />}</Route>\n            <Route path={`${match.path}/review`}>\n              {film && <ReviewView />}\n            </Route>\n          </Switch>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FilmDetail;\n"],"sourceRoot":""}