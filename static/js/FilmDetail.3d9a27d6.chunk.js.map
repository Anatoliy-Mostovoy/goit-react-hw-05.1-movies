{"version":3,"sources":["helpers/customLoader/customLoader.js","api/api.js","helpers/customLoader/customLoader.module.css","View/FilmDetail/FilmDetail.module.css","View/FilmDetail/FilmDetail.js"],"names":["CustomLoader","className","s","Loader","type","color","height","width","timeout","KEY","URL","filmViewQuery","query","a","axios","get","filmDetail","params","castView","homeView","reviewView","module","exports","CastView","lazy","ReviewView","FilmDetail","onClick","match","useRouteMatch","useParams","useState","film","setFilm","loader","setLoader","history","useHistory","location","useLocation","useEffect","filmId","response","data","console","log","fetcher","FilmDetailBtn","event","push","state","from","FilmCard","FilmCardImg","src","poster_path","alt","FilmInfo","FilmInfoMark","title","release_date","popularity","toFixed","overview","genres","map","genre","name","id","FilmDetailNav","InformationCast","activeClassName","FilmDetailNavActive","to","url","InformationReview","fallback","path"],"mappings":"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","file":"static/js/FilmDetail.3d9a27d6.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\nimport s from './customLoader.module.css';\n\nexport const CustomLoader = () => {\n  return (\n    <div className={s.Loader}>\n      <Loader\n        type=\"Circles\"\n        color=\"tomato\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = 'f4d5ed62044715aa9c5e4de0663d29b2';\nconst URL = 'https://api.themoviedb.org';\n\nconst filmViewQuery = async query => {\n  return await axios.get(`${URL}/3/search/movie?api_key=${KEY}&query=${query}`);\n};\n\nconst filmDetail = async params => {\n  return await axios.get(\n    `${URL}/3/movie/${params}?api_key=${KEY}&language=en-US`,\n  );\n};\n\nconst castView = async params => {\n  return await axios.get(\n    `${URL}/3/movie/${params}/credits?api_key=${KEY}&language=en-US`,\n  );\n};\n\nconst homeView = async () => {\n  return await axios.get(`${URL}/3/trending/all/day?api_key=${KEY}`);\n};\n\nconst reviewView = async params => {\n  return await axios.get(\n    `${URL}/3/movie/${params}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  );\n};\n\nexport { filmViewQuery, filmDetail, castView, homeView, reviewView };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"customLoader_Loader__2S1tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmCard\":\"FilmDetail_FilmCard__3STPg\",\"FilmInfo\":\"FilmDetail_FilmInfo__1fny-\",\"InformationCast\":\"FilmDetail_InformationCast__LE4TY\",\"InformationReview\":\"FilmDetail_InformationReview__64v2L\",\"FilmDetailNav\":\"FilmDetail_FilmDetailNav__3eZU2\",\"FilmDetailNavActive\":\"FilmDetail_FilmDetailNavActive__kl1Zj\",\"FilmCardImg\":\"FilmDetail_FilmCardImg__8NBuY\",\"FilmInfoMark\":\"FilmDetail_FilmInfoMark__3fxz0\",\"FilmDetailBtn\":\"FilmDetail_FilmDetailBtn___mmJb\"};","import { useEffect, useState, lazy, Suspense } from 'react';\nimport {\n  NavLink,\n  useRouteMatch,\n  useParams,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport s from './FilmDetail.module.css';\nimport { filmDetail } from '../../api/api';\nimport { CustomLoader } from '../../helpers/customLoader/customLoader';\n\nconst CastView = lazy(() =>\n  import('../CastView/CastView' /* webpackChunkName: \"CastView\" */),\n);\nconst ReviewView = lazy(() =>\n  import('../ReviewView/ReviewView' /* webpackChunkName: \"ReviewView\" */),\n);\n\nconst FilmDetail = ({ onClick }) => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const [film, setFilm] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetcher = async () => {\n      setLoader(true);\n      try {\n        const response = await filmDetail(params.filmId);\n        setLoader(false);\n        setFilm(response.data);\n      } catch (error) {\n        console.log(error.response);\n        setLoader(false);\n      }\n    };\n    fetcher();\n  }, [params.filmId]);\n\n  const onBtnClick = event => {\n    history.push(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      {loader && <CustomLoader />}\n      {film && (\n        <div>\n          <button\n            className={s.FilmDetailBtn}\n            type=\"button\"\n            onClick={onBtnClick}\n          >\n            Back\n          </button>\n          <div className={s.FilmCard}>\n            <img\n              className={s.FilmCardImg}\n              src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n              alt=\"film\"\n            />\n            <div className={s.FilmInfo}>\n              <h1>\n                <span className={s.FilmInfoMark}>{film.title} </span>\n                <span>{film.release_date}</span>\n              </h1>\n              <hr />\n              <h2>\n                <span className={s.FilmInfoMark}>User score:</span>{' '}\n                {film.popularity.toFixed()}%\n              </h2>\n              <hr />\n              <h2 className={s.FilmInfoMark}>Overview</h2>\n              <p>{film.overview}</p>\n              <hr />\n              <h2 className={s.FilmInfoMark}>Genres:</h2>\n              <ul>\n                {film.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </ul>\n              <hr />\n            </div>\n          </div>\n          <hr />\n          <h3>Additional information</h3>\n          <div className={s.FilmDetailNav}>\n            <NavLink\n              className={s.InformationCast}\n              activeClassName={s.FilmDetailNavActive}\n              to={`${match.url}/cast`}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              className={s.InformationReview}\n              activeClassName={s.FilmDetailNavActive}\n              to={`${match.url}/review`}\n            >\n              Review\n            </NavLink>\n          </div>\n          <Suspense fallback={<h1>LOADING...</h1>}>\n            <Switch>\n              <Route path={`${match.path}/cast`}>{film && <CastView />}</Route>\n              <Route path={`${match.path}/review`}>\n                {film && <ReviewView />}\n              </Route>\n            </Switch>\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FilmDetail;\n"],"sourceRoot":""}