{"version":3,"sources":["helpers/customLoader/customLoader.js","helpers/customLoader/customLoader.module.css","View/FilmDetail/FilmDetail.module.css","View/FilmDetail/FilmDetail.js"],"names":["CustomLoader","className","s","Loader","type","color","height","width","timeout","module","exports","CastView","lazy","ReviewView","FilmDetail","onClick","match","useRouteMatch","params","useParams","useState","film","setFilm","loader","setLoader","history","useHistory","location","useLocation","useEffect","a","axios","get","filmId","response","data","fetcher","FilmDetailBtn","event","push","state","from","FilmCard","FilmCardImg","src","poster_path","alt","FilmInfo","FilmInfoMark","title","release_date","popularity","toFixed","overview","genres","map","genre","name","id","FilmDetailNav","InformationCast","activeClassName","FilmDetailNavActive","to","url","InformationReview","fallback","path"],"mappings":"6IAAA,+EAGaA,EAAe,WAC1B,OACE,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CACEC,KAAK,UACLC,MAAM,SACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,U,mBCVjBC,EAAOC,QAAU,CAAC,OAAS,+B,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,6BAA6B,gBAAkB,oCAAoC,kBAAoB,sCAAsC,cAAgB,kCAAkC,oBAAsB,wCAAwC,YAAc,gCAAgC,aAAe,iCAAiC,cAAgB,oC,kJCa1aC,EAAWC,gBAAK,kBACpB,gCAEIC,EAAaD,gBAAK,kBACtB,gCAqGaE,UAlGI,SAAC,GAAgB,EAAdC,QAAe,IAC7BC,EAAQC,cACRC,EAASC,cACf,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAUC,cACVC,EAAWC,cAEjBC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,6DACdN,GAAU,GADI,SAESO,IAAMC,IAAN,6CACiBd,EAAOe,OADxB,6DAFT,cAERC,EAFQ,OAKdV,GAAU,GACVF,EAAQY,EAASC,MANH,kBAOPD,GAPO,2CAAH,qDASbE,KACC,CAAClB,EAAOe,SAMX,OACE,qCACGV,GAAU,cAAC,IAAD,IACVF,GACC,gCACE,wBACEpB,UAAWC,IAAEmC,cACbjC,KAAK,SACLW,QAZS,SAAAuB,GAAU,IAAD,IAC1Bb,EAAQc,KAAR,iBAAaZ,QAAb,IAAaA,GAAb,UAAaA,EAAUa,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAQhC,kBAOA,sBAAKxC,UAAWC,IAAEwC,SAAlB,UACE,qBACEzC,UAAWC,IAAEyC,YACbC,IAAG,0CAAqCvB,EAAKwB,aAC7CC,IAAI,SAEN,sBAAK7C,UAAWC,IAAE6C,SAAlB,UACE,+BACE,uBAAM9C,UAAWC,IAAE8C,aAAnB,UAAkC3B,EAAK4B,MAAvC,OACA,+BAAO5B,EAAK6B,kBAEd,uBACA,+BACE,sBAAMjD,UAAWC,IAAE8C,aAAnB,yBAAoD,IACnD3B,EAAK8B,WAAWC,UAFnB,OAIA,uBACA,oBAAInD,UAAWC,IAAE8C,aAAjB,sBACA,4BAAI3B,EAAKgC,WACT,uBACA,oBAAIpD,UAAWC,IAAE8C,aAAjB,qBACA,6BACG3B,EAAKiC,OAAOC,KAAI,SAAAC,GACf,OAAO,6BAAoBA,EAAMC,MAAjBD,EAAME,SAG1B,6BAGJ,uBACA,wDACA,sBAAKzD,UAAWC,IAAEyD,cAAlB,UACE,cAAC,IAAD,CACE1D,UAAWC,IAAE0D,gBACbC,gBAAiB3D,IAAE4D,oBACnBC,GAAE,UAAK/C,EAAMgD,IAAX,SAHJ,kBAOA,cAAC,IAAD,CACE/D,UAAWC,IAAE+D,kBACbJ,gBAAiB3D,IAAE4D,oBACnBC,GAAE,UAAK/C,EAAMgD,IAAX,WAHJ,uBAQF,cAAC,WAAD,CAAUE,SAAU,4CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,UAAKnD,EAAMmD,KAAX,SAAX,SAAoC9C,GAAQ,cAACV,EAAD,MAC5C,cAAC,IAAD,CAAOwD,KAAI,UAAKnD,EAAMmD,KAAX,WAAX,SACG9C,GAAQ,cAACR,EAAD","file":"static/js/FilmDetail.6f9e237b.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\nimport s from './customLoader.module.css';\n\nexport const CustomLoader = () => {\n  return (\n    <div className={s.Loader}>\n      <Loader\n        type=\"Circles\"\n        color=\"tomato\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"customLoader_Loader__2S1tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmCard\":\"FilmDetail_FilmCard__3STPg\",\"FilmInfo\":\"FilmDetail_FilmInfo__1fny-\",\"InformationCast\":\"FilmDetail_InformationCast__LE4TY\",\"InformationReview\":\"FilmDetail_InformationReview__64v2L\",\"FilmDetailNav\":\"FilmDetail_FilmDetailNav__3eZU2\",\"FilmDetailNavActive\":\"FilmDetail_FilmDetailNavActive__kl1Zj\",\"FilmCardImg\":\"FilmDetail_FilmCardImg__8NBuY\",\"FilmInfoMark\":\"FilmDetail_FilmInfoMark__3fxz0\",\"FilmDetailBtn\":\"FilmDetail_FilmDetailBtn___mmJb\"};","import { useEffect, useState, lazy, Suspense } from 'react';\nimport axios from 'axios';\nimport {\n  NavLink,\n  useRouteMatch,\n  useParams,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport s from './FilmDetail.module.css';\nimport { CustomLoader } from '../../helpers/customLoader/customLoader';\n\nconst CastView = lazy(() =>\n  import('../CastView/CastView' /* webpackChunkName: \"CastView\" */),\n);\nconst ReviewView = lazy(() =>\n  import('../ReviewView/ReviewView' /* webpackChunkName: \"ReviewView\" */),\n);\n\nconst FilmDetail = ({ onClick }) => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const [film, setFilm] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetcher = async () => {\n      setLoader(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${params.filmId}?api_key=f4d5ed62044715aa9c5e4de0663d29b2&language=en-US`,\n      );\n      setLoader(false);\n      setFilm(response.data);\n      return response;\n    };\n    fetcher();\n  }, [params.filmId]);\n\n  const onBtnClick = event => {\n    history.push(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      {loader && <CustomLoader />}\n      {film && (\n        <div>\n          <button\n            className={s.FilmDetailBtn}\n            type=\"button\"\n            onClick={onBtnClick}\n          >\n            Back\n          </button>\n          <div className={s.FilmCard}>\n            <img\n              className={s.FilmCardImg}\n              src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n              alt=\"film\"\n            />\n            <div className={s.FilmInfo}>\n              <h1>\n                <span className={s.FilmInfoMark}>{film.title} </span>\n                <span>{film.release_date}</span>\n              </h1>\n              <hr />\n              <h2>\n                <span className={s.FilmInfoMark}>User score:</span>{' '}\n                {film.popularity.toFixed()}%\n              </h2>\n              <hr />\n              <h2 className={s.FilmInfoMark}>Overview</h2>\n              <p>{film.overview}</p>\n              <hr />\n              <h2 className={s.FilmInfoMark}>Genres:</h2>\n              <ul>\n                {film.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </ul>\n              <hr />\n            </div>\n          </div>\n          <hr />\n          <h3>Additional information</h3>\n          <div className={s.FilmDetailNav}>\n            <NavLink\n              className={s.InformationCast}\n              activeClassName={s.FilmDetailNavActive}\n              to={`${match.url}/cast`}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              className={s.InformationReview}\n              activeClassName={s.FilmDetailNavActive}\n              to={`${match.url}/review`}\n            >\n              Review\n            </NavLink>\n          </div>\n          <Suspense fallback={<h1>LOADING...</h1>}>\n            <Switch>\n              <Route path={`${match.path}/cast`}>{film && <CastView />}</Route>\n              <Route path={`${match.path}/review`}>\n                {film && <ReviewView />}\n              </Route>\n            </Switch>\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FilmDetail;\n"],"sourceRoot":""}